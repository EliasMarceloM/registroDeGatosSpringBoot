version: '3.8'

services:
  backend:
    image: 'docker-spring-boot:latest'
    build: ./demo
    ports:
      - "8080:8080"
    depends_on:
      - db
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/products-api
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: sua senha
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    restart: unless-stopped  
    networks:
      - projeto_gatos_network
   
   
   

  frontend:
    image: 'docker-react:latest'
    build:
      context: ./front_end  
    ports:
      - "3000:3000"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - projeto_gatos_network
    volumes: 
      - ./front_end:/app  

    links:
      - backend

  db:
    image: postgres:latest
    container_name: db_postgresql
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: products-api
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: sua senha
    volumes:
      - postgres_data:/var/lib/postgresql/data 
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - projeto_gatos_network

networks:
  projeto_gatos_network:
    driver: bridge
volumes:
  postgres_data: 
 
 
